useDynLib(highfrequency); 
import(zoo); 
import(xts);

export(
minRV,
medRV,
rCov,
rBPCov,
rOWCov,
makePsd,
rTSCov,
rRTSCov,
rThresholdCov,
rHYCov,
rKernelCov,
rKernel.available,
rAVGCov,
rZero,
rAccumulation,
rMarginal,
rCumSum,
rScatterReturns,
makeReturns,
refreshTime,
harModel,
convert,
TAQLoad,
matchTradesQuotes,
getTradeDirection,
tqLiquidity, 
tradesCleanup,
quotesCleanup,
tradesCleanupFinal,
autoSelectExchangeQuotes, 
autoSelectExchangeTrades, 
exchangeHoursOnly,
mergeQuotesSameTimestamp,
mergeTradesSameTimestamp,
noZeroPrices,
noZeroQuotes,
rmLargeSpread,
rmNegativeSpread,
rmOutliers,
rmTradeOutliers,
salesCondition,
selectExchange,
aggregatePrice,
aggregateQuotes,
aggregateTrades,
aggregatets,
previoustick,
heavyModel,
AJjumptest,
BNSjumptest,
ivInference,
JOjumptest,
medRQ,
minRQ,
MRC,
rBeta,
rKurt,
rMPV,
rQPVar,
rQuar,
rSkew,
rSV,
rTPVar,
heavyModelC,
spotvol,
getPrice,
has.Qty
)

importFrom("graphics", "abline", "layout", "legend", "lines",
             "panel.smooth", "par", "plot", "points", "text", "title")
importFrom("methods", "hasArg", "is")
importFrom("stats", "bw.nrd0", "coef", "cov", "dbeta", "density",
             "dnorm", "end", "formula", "integrate", "lm", "mad",
             "median", "optim", "optimize", "pchisq", "pnorm", "qchisq",
             "qnorm", "residuals", "rnorm", "runif", "sd", "start",
             "summary.lm", "time", "weighted.mean")
importFrom("utils", "data", "read.csv", "read.delim", "tail")
importFrom("grDevices", "dev.interactive")

S3method(print, harModel)
S3method(summary, harModel)
S3method(plot, harModel)
S3method(plot, spotvol)
